<?xml version='1.1' encoding='UTF-8'?>
<hudson>
  <disabledAdministrativeMonitors>
    <string>hudson.node_monitors.MonitorMarkedNodeOffline</string>
    <string>jenkins.monitor.JavaVersionRecommendationAdminMonitor</string>
    <string>hudson.diagnosis.TooManyJobsButNoView</string>
    <string>hudsonHomeIsFull</string>
    <string>hudson.plugins.ec2.ssh.verifiers.SshHostKeyVerificationAdministrativeMonitor</string>
    <string>OldData</string>
    <string>jenkins.security.QueueItemAuthenticatorMonitor</string>
  </disabledAdministrativeMonitors>
  <version>2.332.3</version>
  <numExecutors>0</numExecutors>
  <mode>EXCLUSIVE</mode>
  <useSecurity>true</useSecurity>
  <authorizationStrategy class="hudson.security.GlobalMatrixAuthorizationStrategy">
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:chavafg</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:devimc</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:kata-containers*jenkins-admin</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:chavafg</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:devimc</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:kata-containers*jenkins-admin</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:chavafg</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:devimc</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:kata-containers*jenkins-admin</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:chavafg</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:devimc</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:kata-containers*jenkins-admin</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:chavafg</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:devimc</permission>
    <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Computer.Build:chavafg</permission>
    <permission>hudson.model.Computer.Build:devimc</permission>
    <permission>hudson.model.Computer.Build:kata-containers</permission>
    <permission>hudson.model.Computer.Build:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Computer.Build:kata-containers*runtime</permission>
    <permission>hudson.model.Computer.Build:kata-containers*tests</permission>
    <permission>hudson.model.Computer.Configure:chavafg</permission>
    <permission>hudson.model.Computer.Configure:devimc</permission>
    <permission>hudson.model.Computer.Configure:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Computer.Connect:chavafg</permission>
    <permission>hudson.model.Computer.Connect:devimc</permission>
    <permission>hudson.model.Computer.Connect:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Computer.Create:chavafg</permission>
    <permission>hudson.model.Computer.Create:devimc</permission>
    <permission>hudson.model.Computer.Create:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Computer.Delete:chavafg</permission>
    <permission>hudson.model.Computer.Delete:devimc</permission>
    <permission>hudson.model.Computer.Delete:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Computer.Disconnect:chavafg</permission>
    <permission>hudson.model.Computer.Disconnect:devimc</permission>
    <permission>hudson.model.Computer.Disconnect:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Hudson.Administer:chavafg</permission>
    <permission>hudson.model.Hudson.Administer:devimc</permission>
    <permission>hudson.model.Hudson.Administer:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Hudson.Administer:wainersm</permission>
    <permission>hudson.model.Hudson.Read:anonymous</permission>
    <permission>hudson.model.Hudson.Read:authenticated</permission>
    <permission>hudson.model.Hudson.Read:chavafg</permission>
    <permission>hudson.model.Hudson.Read:devimc</permission>
    <permission>hudson.model.Hudson.Read:kata-containers</permission>
    <permission>hudson.model.Hudson.Read:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Hudson.Read:kata-containers*runtime</permission>
    <permission>hudson.model.Hudson.Read:kata-containers*tests</permission>
    <permission>hudson.model.Item.Build:chavafg</permission>
    <permission>hudson.model.Item.Build:devimc</permission>
    <permission>hudson.model.Item.Build:kata-containers</permission>
    <permission>hudson.model.Item.Build:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Build:kata-containers*runtime</permission>
    <permission>hudson.model.Item.Build:kata-containers*tests</permission>
    <permission>hudson.model.Item.Build:katabuilder</permission>
    <permission>hudson.model.Item.Cancel:chavafg</permission>
    <permission>hudson.model.Item.Cancel:devimc</permission>
    <permission>hudson.model.Item.Cancel:kata-containers</permission>
    <permission>hudson.model.Item.Cancel:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Cancel:kata-containers*runtime</permission>
    <permission>hudson.model.Item.Cancel:kata-containers*tests</permission>
    <permission>hudson.model.Item.Cancel:katabuilder</permission>
    <permission>hudson.model.Item.Configure:chavafg</permission>
    <permission>hudson.model.Item.Configure:devimc</permission>
    <permission>hudson.model.Item.Configure:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Configure:katabuilder</permission>
    <permission>hudson.model.Item.Create:chavafg</permission>
    <permission>hudson.model.Item.Create:devimc</permission>
    <permission>hudson.model.Item.Create:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Create:katabuilder</permission>
    <permission>hudson.model.Item.Delete:chavafg</permission>
    <permission>hudson.model.Item.Delete:devimc</permission>
    <permission>hudson.model.Item.Delete:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Delete:katabuilder</permission>
    <permission>hudson.model.Item.Discover:anonymous</permission>
    <permission>hudson.model.Item.Discover:authenticated</permission>
    <permission>hudson.model.Item.Discover:chavafg</permission>
    <permission>hudson.model.Item.Discover:devimc</permission>
    <permission>hudson.model.Item.Discover:kata-containers</permission>
    <permission>hudson.model.Item.Discover:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Discover:kata-containers*runtime</permission>
    <permission>hudson.model.Item.Discover:kata-containers*tests</permission>
    <permission>hudson.model.Item.Discover:katabuilder</permission>
    <permission>hudson.model.Item.Move:chavafg</permission>
    <permission>hudson.model.Item.Move:devimc</permission>
    <permission>hudson.model.Item.Move:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Move:katabuilder</permission>
    <permission>hudson.model.Item.Read:anonymous</permission>
    <permission>hudson.model.Item.Read:authenticated</permission>
    <permission>hudson.model.Item.Read:chavafg</permission>
    <permission>hudson.model.Item.Read:devimc</permission>
    <permission>hudson.model.Item.Read:kata-containers</permission>
    <permission>hudson.model.Item.Read:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Read:kata-containers*runtime</permission>
    <permission>hudson.model.Item.Read:kata-containers*tests</permission>
    <permission>hudson.model.Item.Read:katabuilder</permission>
    <permission>hudson.model.Item.ViewStatus:anonymous</permission>
    <permission>hudson.model.Item.ViewStatus:authenticated</permission>
    <permission>hudson.model.Item.ViewStatus:chavafg</permission>
    <permission>hudson.model.Item.ViewStatus:devimc</permission>
    <permission>hudson.model.Item.ViewStatus:kata-containers</permission>
    <permission>hudson.model.Item.ViewStatus:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.ViewStatus:kata-containers*runtime</permission>
    <permission>hudson.model.Item.ViewStatus:kata-containers*tests</permission>
    <permission>hudson.model.Item.ViewStatus:katabuilder</permission>
    <permission>hudson.model.Item.Workspace:chavafg</permission>
    <permission>hudson.model.Item.Workspace:devimc</permission>
    <permission>hudson.model.Item.Workspace:kata-containers</permission>
    <permission>hudson.model.Item.Workspace:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Item.Workspace:kata-containers*runtime</permission>
    <permission>hudson.model.Item.Workspace:kata-containers*tests</permission>
    <permission>hudson.model.Run.Delete:chavafg</permission>
    <permission>hudson.model.Run.Delete:devimc</permission>
    <permission>hudson.model.Run.Delete:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Run.Replay:chavafg</permission>
    <permission>hudson.model.Run.Replay:devimc</permission>
    <permission>hudson.model.Run.Replay:kata-containers</permission>
    <permission>hudson.model.Run.Replay:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Run.Replay:kata-containers*runtime</permission>
    <permission>hudson.model.Run.Replay:kata-containers*tests</permission>
    <permission>hudson.model.Run.Update:chavafg</permission>
    <permission>hudson.model.Run.Update:devimc</permission>
    <permission>hudson.model.Run.Update:kata-containers</permission>
    <permission>hudson.model.Run.Update:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.Run.Update:kata-containers*runtime</permission>
    <permission>hudson.model.Run.Update:kata-containers*tests</permission>
    <permission>hudson.model.View.Configure:chavafg</permission>
    <permission>hudson.model.View.Configure:devimc</permission>
    <permission>hudson.model.View.Configure:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.View.Create:chavafg</permission>
    <permission>hudson.model.View.Create:devimc</permission>
    <permission>hudson.model.View.Create:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.View.Delete:chavafg</permission>
    <permission>hudson.model.View.Delete:devimc</permission>
    <permission>hudson.model.View.Delete:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.View.Read:anonymous</permission>
    <permission>hudson.model.View.Read:authenticated</permission>
    <permission>hudson.model.View.Read:chavafg</permission>
    <permission>hudson.model.View.Read:devimc</permission>
    <permission>hudson.model.View.Read:kata-containers</permission>
    <permission>hudson.model.View.Read:kata-containers*jenkins-admin</permission>
    <permission>hudson.model.View.Read:kata-containers*runtime</permission>
    <permission>hudson.model.View.Read:kata-containers*tests</permission>
    <permission>hudson.scm.SCM.Tag:chavafg</permission>
    <permission>hudson.scm.SCM.Tag:devimc</permission>
    <permission>hudson.scm.SCM.Tag:kata-containers*jenkins-admin</permission>
    <permission>org.jenkins.plugins.lockableresources.LockableResourcesManager.Reserve:devimc</permission>
    <permission>org.jenkins.plugins.lockableresources.LockableResourcesManager.Unlock:devimc</permission>
    <permission>org.jenkins.plugins.lockableresources.LockableResourcesManager.View:devimc</permission>
  </authorizationStrategy>
  <securityRealm class="org.jenkinsci.plugins.GithubSecurityRealm">
    <githubWebUri>https://github.com</githubWebUri>
    <githubApiUri>https://api.github.com</githubApiUri>
    <clientID>e11e7e0dee39d432dd71</clientID>
    <clientSecret>{AQAAABAAAAAw63BzQnIFRpYlOHXlZEOGFBAirFkR9h/MCwBE9dn8iqJCt3HPPXSPDFV2BTSUDe/LEmi+kmd3+sqHshd3G+bT2Q==}</clientSecret>
    <oauthScopes>read:org,user:email</oauthScopes>
  </securityRealm>
  <disableRememberMe>false</disableRememberMe>
  <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
  <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULL_NAME}</workspaceDir>
  <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
  <markupFormatter class="hudson.markup.RawHtmlMarkupFormatter" plugin="antisamy-markup-formatter@2.7">
    <disableSyntaxHighlighting>false</disableSyntaxHighlighting>
  </markupFormatter>
  <jdks/>
  <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
  <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
  <clouds>
    <jenkins.plugins.openstack.compute.JCloudsCloud plugin="openstack-cloud@2.61">
      <name>vexxhost</name>
      <endPointUrl>https://auth.vexxhost.net/v3</endPointUrl>
      <ignoreSsl>false</ignoreSsl>
      <slaveOptions>
        <hardwareId>d9115351-defe-4fac-986b-1a1187e2c31c</hardwareId>
        <networkId>1e72028e-5257-4f34-bea0-4ad5a9043dae</networkId>
        <keyPairName>jenkins</keyPairName>
        <fsRoot>/tmp/jenkins</fsRoot>
        <retentionTime>0</retentionTime>
      </slaveOptions>
      <templates class="java.util.Collections$UnmodifiableRandomAccessList" resolves-to="java.util.Collections$UnmodifiableList">
        <c class="list">
          <jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
            <name>ubuntu-1604</name>
            <labelString>ubuntu-1604</labelString>
            <slaveOptions>
              <bootSource class="jenkins.plugins.openstack.compute.slaveopts.BootSource$VolumeFromImage">
                <name>kata-ubuntu-16.04-x86_64</name>
                <volumeSize>40</volumeSize>
              </bootSource>
              <userDataId>bd93267e-7277-44bc-b8e0-6ed5fbdd805a</userDataId>
              <launcherFactory class="jenkins.plugins.openstack.compute.slaveopts.LauncherFactory$SSH">
                <credentialsId>41ae6468-60e0-45a5-8278-099ba98fdd63</credentialsId>
              </launcherFactory>
            </slaveOptions>
          </jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
          <jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
            <name>ubuntu-1710</name>
            <labelString>ubuntu-1710</labelString>
            <slaveOptions>
              <bootSource class="jenkins.plugins.openstack.compute.slaveopts.BootSource$VolumeFromImage">
                <name>kata-ubuntu-17.10-x86_64</name>
                <volumeSize>40</volumeSize>
              </bootSource>
              <userDataId>bd93267e-7277-44bc-b8e0-6ed5fbdd805a</userDataId>
              <launcherFactory class="jenkins.plugins.openstack.compute.slaveopts.LauncherFactory$SSH">
                <credentialsId>41ae6468-60e0-45a5-8278-099ba98fdd63</credentialsId>
              </launcherFactory>
            </slaveOptions>
          </jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
          <jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
            <name>centos-7</name>
            <labelString>centos-7</labelString>
            <slaveOptions>
              <bootSource class="jenkins.plugins.openstack.compute.slaveopts.BootSource$VolumeFromImage">
                <name>kata-centos-7.5-x86_64</name>
                <volumeSize>40</volumeSize>
              </bootSource>
              <userDataId>5af56ce8-e87c-4710-aae8-c2ec453b42ee</userDataId>
              <launcherFactory class="jenkins.plugins.openstack.compute.slaveopts.LauncherFactory$SSH">
                <credentialsId>1b74a8b9-6b9e-4c8c-b0e7-f2a011f97587</credentialsId>
              </launcherFactory>
            </slaveOptions>
          </jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
          <jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
            <name>fedora-27</name>
            <labelString>fedora-27</labelString>
            <slaveOptions>
              <bootSource class="jenkins.plugins.openstack.compute.slaveopts.BootSource$VolumeFromImage">
                <name>kata-fedora-27-x86_64</name>
                <volumeSize>40</volumeSize>
              </bootSource>
              <userDataId>97d148e6-829b-4011-b5c6-39a0e959da56</userDataId>
              <launcherFactory class="jenkins.plugins.openstack.compute.slaveopts.LauncherFactory$SSH">
                <credentialsId>3bc0e03e-da0d-4310-a1c8-f97379e42bb9</credentialsId>
              </launcherFactory>
            </slaveOptions>
          </jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
          <jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
            <name>fedora-28</name>
            <labelString>fedora-28</labelString>
            <slaveOptions>
              <bootSource class="jenkins.plugins.openstack.compute.slaveopts.BootSource$VolumeFromImage">
                <name>Fedora Cloud 28 (x86_64) [2018-04-25]</name>
                <volumeSize>40</volumeSize>
              </bootSource>
              <userDataId>97d148e6-829b-4011-b5c6-39a0e959da56</userDataId>
              <launcherFactory class="jenkins.plugins.openstack.compute.slaveopts.LauncherFactory$SSH">
                <credentialsId>3bc0e03e-da0d-4310-a1c8-f97379e42bb9</credentialsId>
              </launcherFactory>
            </slaveOptions>
          </jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
          <jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
            <name>fedora-29</name>
            <labelString>fedora-29</labelString>
            <slaveOptions>
              <bootSource class="jenkins.plugins.openstack.compute.slaveopts.BootSource$VolumeFromImage">
                <name>Fedora Cloud 29 (x86_64) [2018-10-24]</name>
                <volumeSize>40</volumeSize>
              </bootSource>
              <userDataId>97d148e6-829b-4011-b5c6-39a0e959da56</userDataId>
              <launcherFactory class="jenkins.plugins.openstack.compute.slaveopts.LauncherFactory$SSH">
                <credentialsId>3bc0e03e-da0d-4310-a1c8-f97379e42bb9</credentialsId>
              </launcherFactory>
            </slaveOptions>
          </jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
          <jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
            <name>ubuntu-1804</name>
            <labelString>ubuntu-1804 ubuntu-lts-latest-vexxhost</labelString>
            <slaveOptions>
              <bootSource class="jenkins.plugins.openstack.compute.slaveopts.BootSource$VolumeFromImage">
                <name>Ubuntu 18.04 LTS (x86_64) [2018-05-09]</name>
                <volumeSize>40</volumeSize>
              </bootSource>
              <userDataId>bd93267e-7277-44bc-b8e0-6ed5fbdd805a</userDataId>
              <launcherFactory class="jenkins.plugins.openstack.compute.slaveopts.LauncherFactory$SSH">
                <credentialsId>41ae6468-60e0-45a5-8278-099ba98fdd63</credentialsId>
              </launcherFactory>
            </slaveOptions>
          </jenkins.plugins.openstack.compute.JCloudsSlaveTemplate>
        </c>
        <list reference="../c"/>
      </templates>
      <credentialId>kata-openstack-credentials</credentialId>
    </jenkins.plugins.openstack.compute.JCloudsCloud>
    <com.google.jenkins.plugins.computeengine.ComputeEngineCloud plugin="google-compute-engine@4.3.8">
      <name>gce-kata-containers gce</name>
      <instanceCap>3</instanceCap>
      <projectId>kata-containers</projectId>
      <credentialsId>kata-containers-gce</credentialsId>
      <instanceId>82306218-ff47-495f-b593-319edf6374bc</instanceId>
      <configurations>
        <com.google.jenkins.plugins.computeengine.InstanceConfiguration>
          <description>Ubuntu 16.04 from GCE</description>
          <namePrefix>ubuntu-1604-gce</namePrefix>
          <region>Error retrieving regions</region>
          <zone>Error retrieving zones</zone>
          <machineType></machineType>
          <numExecutorsStr>1</numExecutorsStr>
          <startupScript>#!/bin/bash

set -x
/etc/init.d/ssh stop
# Stop unattended-upgrades service
sudo systemctl stop unattended-upgrades
sudo systemctl disable unattended-upgrades
sudo pkill -f dpkg
sudo pkill -f apt-get
sudo rm -f /var/lib/dpkg/lock
sudo rm -f /var/lib/apt/lists/lock
sudo rm -f /var/cache/apt/archives/lock

# Install git, make and gcc
sudo apt update -y
sudo apt install -y git make gcc

# Install docker
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;
sudo apt update -y
sudo apt install -y docker-ce
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

git config --global user.email &quot;katacontainersbot@gmail.com&quot;
git config --global user.name &quot;Kata Containers Bot&quot;


/etc/init.d/ssh start</startupScript>
          <preemptible>false</preemptible>
          <minCpuPlatform></minCpuPlatform>
          <labels>ubuntu-1604-gce</labels>
          <runAsUser>jenkins</runAsUser>
          <bootDiskType></bootDiskType>
          <bootDiskAutoDelete>true</bootDiskAutoDelete>
          <bootDiskSourceImageName>Error retrieving images for project</bootDiskSourceImageName>
          <bootDiskSourceImageProject>kata-containers</bootDiskSourceImageProject>
          <networkConfiguration class="com.google.jenkins.plugins.computeengine.AutofilledNetworkConfiguration">
            <network></network>
            <subnetwork></subnetwork>
          </networkConfiguration>
          <externalAddress>true</externalAddress>
          <useInternalAddress>false</useInternalAddress>
          <ignoreProxy>false</ignoreProxy>
          <networkTags></networkTags>
          <serviceAccountEmail></serviceAccountEmail>
          <mode>EXCLUSIVE</mode>
          <retentionTimeMinutesStr>10</retentionTimeMinutesStr>
          <launchTimeoutSecondsStr>600</launchTimeoutSecondsStr>
          <bootDiskSizeGbStr>15</bootDiskSizeGbStr>
          <oneShot>false</oneShot>
          <template>Error retrieving instanceTemplates</template>
          <createSnapshot>false</createSnapshot>
          <remoteFs>/tmp</remoteFs>
          <javaExecPath>java</javaExecPath>
          <googleLabels>
            <entry>
              <string>jenkins_cloud_id</string>
              <string>82306218-ff47-495f-b593-319edf6374bc</string>
            </entry>
            <entry>
              <string>jenkins_config_name</string>
              <string>ubuntu-1604-gce</string>
            </entry>
          </googleLabels>
          <numExecutors>1</numExecutors>
          <retentionTimeMinutes>10</retentionTimeMinutes>
          <launchTimeoutSeconds>600</launchTimeoutSeconds>
          <bootDiskSizeGb>15</bootDiskSizeGb>
        </com.google.jenkins.plugins.computeengine.InstanceConfiguration>
      </configurations>
      <noDelayProvisioning>false</noDelayProvisioning>
    </com.google.jenkins.plugins.computeengine.ComputeEngineCloud>
    <com.microsoft.azure.vmagent.AzureVMCloud plugin="azure-vm-agents@810.v0a97a847315a">
      <name>AzureVMAgents</name>
      <cloudName>AzureVMAgents</cloudName>
      <credentialsId>6fd57ac9-f917-468f-8231-5f820311655c</credentialsId>
      <maxVirtualMachinesLimit>50</maxVirtualMachinesLimit>
      <resourceGroupReferenceType>existing</resourceGroupReferenceType>
      <newResourceGroupName></newResourceGroupName>
      <existingResourceGroupName>kataCI</existingResourceGroupName>
      <vmTemplates class="java.util.concurrent.CopyOnWriteArrayList">
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>debian10-azure</templateName>
          <templateDesc>Debian 10 on Azure</templateDesc>
          <labels>debian10_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>Debian</publisher>
            <offer>debian-10</offer>
            <sku>10</sku>
            <version>0.20200928.407</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Ubuntu 16.04 LTS</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x
# Stop unattended-upgrades service
pkill -f dpkg
pkill -f apt-get
rm -f /var/lib/dpkg/lock
rm -f /var/lib/apt/lists/lock
rm -f /var/cache/apt/archives/lock

apt clean all

# Install git, make and gcc
apt update
apt install -y git make gcc  apt-transport-https  ca-certificates curl  gnupg2 software-properties-common openjdk-11-jre

# Install docker
apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo &quot;$ID&quot;)/gpg | sudo apt-key add -
add-apt-repository &quot;deb https://download.docker.com/linux/$(. /etc/os-release; echo &quot;$ID&quot;) jessie stable&quot;
apt-get update
apt-get -y install docker-ce

gpasswd -a jenkins docker
chmod g+rw /var/run/docker.sock

git config --global user.email &quot;katacontainersbot@gmail.com&quot;
git config --global user.name &quot;Kata Containers Bot&quot;

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>ubuntu1604-azure</templateName>
          <templateDesc>ubuntu 1604 azure image</templateDesc>
          <labels>ubuntu1604_azure ubuntu1604-azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>Canonical</publisher>
            <offer>UbuntuServer</offer>
            <sku>16.04-LTS</sku>
            <version>latest</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

# Stop unattended-upgrades service
sudo systemctl stop unattended-upgrades
sudo systemctl disable unattended-upgrades
sudo pkill -f dpkg
sudo pkill -f apt-get
sudo rm -f /var/lib/dpkg/lock
sudo rm -f /var/lib/apt/lists/lock
sudo rm -f /var/cache/apt/archives/lock

# Install git, make and gcc
sudo apt update -y
sudo apt install -y git make gcc bc

# Install docker
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;
sudo apt update -y
sudo apt install -y docker-ce
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo apt update -y
sudo apt install -y openjdk-8-jre

git config --global user.email &quot;katacontainersbot@gmail.com&quot;
git config --global user.name &quot;Kata Containers Bot&quot;

echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo tee -a /etc/hosts

# wipe any partition on sdb and add the device as LVM_DEVICE variable
device=/dev/sdb
echo &quot;LVM_DEVICE=\&quot;$device\&quot;&quot; | sudo tee -a /etc/environment
mount | grep -q $device &amp;&amp; sudo umount $(mount | grep $device | cut -d&apos; &apos; -f1)
sudo dd if=/dev/zero of=$device bs=128M count=1</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>centos7-azure</templateName>
          <templateDesc>centos 7.5 azure image</templateDesc>
          <labels>centos7_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>OpenLogic</publisher>
            <offer>CentOS</offer>
            <sku>7.5</sku>
            <version>7.5.20180529</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

# Install git, gcc and python
yum install -y git gcc python

# Install docker
yum install -y yum-utils
yum-config-manager --add-repo &quot;https://download.docker.com/linux/centos/docker-ce.repo&quot;
yum -y install docker-ce

systemctl start docker
gpasswd -a jenkins docker
chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
yum install -y java-1.8.0-openjdk

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>fedora28-azure</templateName>
          <templateDesc>Fedora 28 custom image</templateDesc>
          <labels>fedora28-azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <uri>https://katastg.blob.core.windows.net/kata/Fedora-Cloud-28-2019-05-24.vhd</uri>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

# Install git, gcc and python
sudo dnf install -y git gcc python make haveged

sudo systemctl start haveged

# Install docker
sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
sudo dnf config-manager --set-enabled docker-ce-stable
sudo dnf makecache
sudo dnf install -y docker-ce

sudo systemctl start docker
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo dnf install -y java-1.8.0-openjdk </initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>ubuntu1804-azure</templateName>
          <templateDesc>ubuntu 1804 azure image</templateDesc>
          <labels>ubuntu1804_azure ubuntu1804-azure ubuntu-lts-latest-azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>Canonical</publisher>
            <offer>UbuntuServer</offer>
            <sku>18.04-LTS</sku>
            <version>18.04.202001291</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

# Stop unattended-upgrades service
sudo systemctl stop unattended-upgrades
sudo systemctl disable unattended-upgrades
sudo pkill -f dpkg
sudo pkill -f apt-get
sudo rm -f /var/lib/dpkg/lock
sudo rm -f /var/lib/apt/lists/lock
sudo rm -f /var/cache/apt/archives/lock

# Install git, make and gcc
sudo apt update -y
sudo apt install -y git make gcc

# Install docker
#sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
#curl -fsSL https://download.docker.com/linux/ubuntu/gpg | #sudo apt-key add -
#sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;
#sudo apt update -y
#sudo apt install -y docker-ce=18.06.3~ce~3-0~ubuntu

sudo groupadd docker
# sudo usermod -aG docker $USER
sudo gpasswd -a $USER docker
# sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo apt update -y
sudo apt install -y openjdk-8-jre

git config --global user.email &quot;katacontainersbot@gmail.com&quot;
git config --global user.name &quot;Kata Containers Bot&quot;

echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo tee -a /etc/hosts

# wipe any partition on sdb and add the device as LVM_DEVICE variable
device=/dev/sdb
echo &quot;LVM_DEVICE=\&quot;$device\&quot;&quot; | sudo tee -a /etc/environment
mount | grep -q $device &amp;&amp; sudo umount $(mount | grep $device | cut -d&apos; &apos; -f1)
sudo dd if=/dev/zero of=$device bs=128M count=1</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>opensuse15-azure</templateName>
          <templateDesc>openSUSE Leap 15.0</templateDesc>
          <labels>opensuse15_azure opensuse15-azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>SUSE</publisher>
            <offer>openSUSE-Leap</offer>
            <sku>15-1</sku>
            <version>2019.06.18</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

sudo zypper rr openSUSE-Leap-devel-languages-python-aws
sudo zypper rr openSUSE-Leap-Cloud-Tools 

sudo zypper -n refresh
sudo zypper -n install git
sudo zypper -n install gcc
sudo zypper -n install python
sudo zypper -n install make

# Install docker
sudo zypper -n install yum-utils
sudo groupadd jenkins
sudo usermod -aG jenkins jenkins
sudo zypper removelock docker
sudo zypper -n  install &apos;docker&lt;19.03&apos;
sudo zypper addlock docker

sudo systemctl start docker
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo zypper -n install java-1_8_0-openjdk

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers

sudo zypper removelock docker
</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>sles15sp1-azure</templateName>
          <templateDesc>sles 15 sp1</templateDesc>
          <labels>sles15-azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <id>/subscriptions/2efae366-54ff-4d92-b51e-7454e50408e3/resourceGroups/kataCI/providers/Microsoft.Compute/images/SLES15-SP2</id>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM_IMAGE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x
whoami
sudo zypper -n refresh
sudo zypper -n install git 
sudo zypper -n install python
sudo zypper -n install make

# Install docker
sudo zypper removelock docker
sudo zypper -n  install &apos;docker&lt;19.03&apos;
sudo zypper addlock docker
sudo groupadd jenkins
sudo usermod -aG jenkins jenkins
sudo systemctl start docker
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo zypper -n install java-1_8_0-openjdk

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers

sudo zypper removelock docker
</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>rhel-7-azure</templateName>
          <templateDesc>rhel 7.6</templateDesc>
          <labels>rhel7-azure rhel7_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>RedHat</publisher>
            <offer>RHEL</offer>
            <sku>7-RAW</sku>
            <version>7.6.2018103108</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

yum -y update

# Install git, gcc and python
yum install -y git gcc python

# Install docker
yum install -y yum-utils
yum-config-manager --add-repo &quot;https://download.docker.com/linux/centos/docker-ce.repo&quot;
yum -y install docker-ce

systemctl start docker
gpasswd -a jenkins docker
chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
yum install -y java-1.8.0-openjdk

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>fedora30</templateName>
          <templateDesc>cloud image of fedora 30</templateDesc>
          <labels>fedora30_azure_big</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D32s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <uri>https://katastg.blob.core.windows.net/kata/Fedora-Cloud-Base-30-1.2.x86_64.vhd</uri>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

# Install git, gcc and python
sudo dnf install -y git gcc python make haveged

sudo systemctl start haveged

# Install docker
sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
sudo sed -i &apos;s/$releasever/28/&apos; /etc/yum.repos.d/docker-ce.repo
sudo dnf config-manager --set-enabled docker-ce-stable
sudo dnf makecache
sudo dnf install -y docker-ce-18.06.3.ce-3.fc28

sudo systemctl start docker
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo dnf install -y java-1.8.0-openjdk </initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>fedora31</templateName>
          <templateDesc>cloud image of fedora 31</templateDesc>
          <labels>fedora31_azure fedora_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <id>/subscriptions/2efae366-54ff-4d92-b51e-7454e50408e3/resourceGroups/kataCI/providers/Microsoft.Compute/images/Fedora-31-Docker</id>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM_IMAGE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

# Install git, gcc and python
sudo dnf install -y git gcc python make haveged

sudo systemctl start haveged

# Install docker
sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
sudo sed -i &apos;s/$releasever/28/&apos; /etc/yum.repos.d/docker-ce.repo
sudo dnf config-manager --set-enabled docker-ce-stable
sudo dnf makecache
sudo dnf install -y docker-ce-18.06.3.ce-3.fc28

sudo systemctl start docker
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo dnf install -y java-1.8.0-openjdk 

#increase mlock
echo &quot;*  -   memlock   16384&quot; | sudo tee /etc/security/limits.d/95-memlock.conf</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>centos8</templateName>
          <templateDesc>centos 8</templateDesc>
          <labels>centos8_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>OpenLogic</publisher>
            <offer>CentOS</offer>
            <sku>8_1-gen2</sku>
            <version>8.1.2020111901</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x


#sed -i &apos;s/#mirrorlist/mirrorlist/g&apos; /etc/yum.repos.d/CentOS-AppStream.repo

yum -v clean all
yum -y update

# Ensure there&apos;s no podman or buildah installed, as docker will be used
yum -y erase podman buildah

# Install git, gcc and python
yum install -y git
yum install -y gcc 
yum install -y python3

# Install docker
yum install -y yum-utils
yum-config-manager --add-repo &quot;https://download.docker.com/linux/centos/docker-ce.repo&quot;
yum install -y https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm
yum -y install docker-ce

systemctl start docker
gpasswd -a jenkins docker
chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
yum install -y java-1.8.0-openjdk

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>fedora31podman</templateName>
          <templateDesc>fedora31podman</templateDesc>
          <labels>fedora31_podman_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <id>/subscriptions/2efae366-54ff-4d92-b51e-7454e50408e3/resourceGroups/kataCI/providers/Microsoft.Compute/images/Fedora31podmanimage</id>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM_IMAGE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

# Install git, gcc and python
sudo dnf install -y git gcc python make haveged

sudo systemctl start haveged

# Install Java JRE and JDK for Jenkins agent
sudo dnf install -y java-1.8.0-openjdk

export TRUSTED_GROUP=&quot;kvm&quot;
getent group &quot;${TRUSTED_GROUP}&quot; &amp;&gt;/dev/null || sudo groupadd --system &quot;${TRUSTED_GROUP}&quot;
sudo usermod -a -G &quot;${TRUSTED_GROUP}&quot; $USER
newgrp &quot;${TRUSTED_GROUP}&quot; &lt;&lt; END
echo &quot;This is running as group $(id -gn)&quot;
END
echo &quot;Show groups&quot;
groups
sudo chown root:&quot;${TRUSTED_GROUP}&quot; /dev/&quot;${TRUSTED_GROUP}&quot;
sudo chmod g+rw /dev/&quot;${TRUSTED_GROUP}&quot;
</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>rhel77azure</templateName>
          <templateDesc>rhel 7.7 azure</templateDesc>
          <labels>rhel_7_7_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>RedHat</publisher>
            <offer>RHEL</offer>
            <sku>7-RAW</sku>
            <version>7.7.2019090418</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

yum-config-manager --enable rhui-rhel-7-server-rhui-optional-rpms

yum -y update

# Install git, gcc and python
yum install -y git gcc python

# Install docker
yum install -y yum-utils
yum-config-manager --add-repo &quot;https://download.docker.com/linux/centos/docker-ce.repo&quot;
yum -y install docker-ce

systemctl start docker
gpasswd -a jenkins docker
chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
yum install -y java-1.8.0-openjdk

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>ubuntu20</templateName>
          <templateDesc>ubuntu 20.04</templateDesc>
          <labels>ubuntu20_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <id>/subscriptions/2efae366-54ff-4d92-b51e-7454e50408e3/resourceGroups/kataCI/providers/Microsoft.Compute/images/Ubuntu20.04</id>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM_IMAGE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

# Stop unattended-upgrades service
sudo systemctl stop unattended-upgrades
sudo systemctl disable unattended-upgrades
sudo pkill -f dpkg
sudo pkill -f apt-get
sudo rm -f /var/lib/dpkg/lock
sudo rm -f /var/lib/apt/lists/lock
sudo rm -f /var/cache/apt/archives/lock

# Install git, make and gcc
sudo apt update -y
sudo apt install -y git make gcc

# Install docker
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable&quot;
sudo apt update -y
sudo apt install -y docker-ce
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo apt update -y
sudo apt install -y openjdk-8-jre

git config --global user.email &quot;katacontainersbot@gmail.com&quot;
git config --global user.name &quot;Kata Containers Bot&quot;

echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo tee -a /etc/hosts

# wipe any partition on sdb and add the device as LVM_DEVICE variable
device=/dev/sdb
echo &quot;LVM_DEVICE=\&quot;$device\&quot;&quot; | sudo tee -a /etc/environment
mount | grep -q $device &amp;&amp; sudo umount $(mount | grep $device | cut -d&apos; &apos; -f1)
sudo dd if=/dev/zero of=$device bs=128M count=1</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>rhel8azure</templateName>
          <templateDesc>rhel 8</templateDesc>
          <labels>rhel8_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>100</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>NORMAL</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>RedHat</publisher>
            <offer>RHEL</offer>
            <sku>8</sku>
            <version>8.0.2019101800</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

echo &quot;Starting Inizialization script&quot;

# Device that will be used to extend the volume group
device=&quot;/dev/sdb&quot;
# Umount device
mount | grep -q &quot;$device&quot; &amp;&amp; sudo umount $(mount | grep $device | cut -d&apos; &apos; -f1)

# wipe any partition on sdb and add the device as LVM_DEVICE variable
sudo dd if=/dev/zero of=&quot;$device&quot; bs=128M count=1

# Volume Group that needs to be extended
vol_group=&quot;rootvg&quot;

# Create physical volume and extend the volume group
pvcreate &quot;$device&quot;
pvscan
vgextend &quot;$vol_group&quot; &quot;$device&quot;
vgdisplay &quot;$vol_group&quot;

# Extend logical volumes
lvextend /dev/rootvg/rootlv -L +8G -An
lvextend /dev/rootvg/homelv -L +10G -An
lvextend /dev/rootvg/tmplv -L +5G -An
lvextend /dev/rootvg/varlv -L +8G -An

# Verify logical volumes size
lvscan

# Resize ext4 filesystems
resize2fs /dev/rootvg/rootlv 
resize2fs /dev/rootvg/homelv
resize2fs /dev/rootvg/tmplv
resize2fs /dev/rootvg/varlv

df -h

# yum -y update

# Ensure there&apos;s no podman or buildah installed, as docker will be used
yum -y erase podman buildah

# Install git, gcc and python
yum install -y git gcc python3

# Install docker
yum install -y yum-utils
yum-config-manager --add-repo &quot;https://download.docker.com/linux/centos/docker-ce.repo&quot;
yum install -y https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm
yum -y install docker-ce

systemctl start docker
gpasswd -a jenkins docker
chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
yum install -y java-1.8.0-openjdk

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers
</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>false</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>fedoradocker32</templateName>
          <templateDesc>fedora32docker</templateDesc>
          <labels>fedora32_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <id>/subscriptions/2efae366-54ff-4d92-b51e-7454e50408e3/resourceGroups/kataCI/providers/Microsoft.Compute/images/Fedora32Docker</id>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM_IMAGE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

# Install git, gcc and python
sudo dnf install -y git gcc python make haveged

sudo systemctl start haveged

# Install docker
sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
sudo sed -i &apos;s/$releasever/28/&apos; /etc/yum.repos.d/docker-ce.repo
sudo dnf config-manager --set-enabled docker-ce-stable
sudo dnf makecache
sudo dnf install -y docker-ce-18.06.3.ce-3.fc28

sudo systemctl start docker
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo dnf install -y java-1.8.0-openjdk 
</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>ubuntu20</templateName>
          <templateDesc>ubuntu 20.04</templateDesc>
          <labels>ubuntu_20.04</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <publisher>Canonical</publisher>
            <offer>0001-com-ubuntu-server-focal</offer>
            <sku>20_04-lts-gen2</sku>
            <version>latest</version>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>REFERENCE</type>
          </imageReference>
          <builtInImage>Windows Server 2016</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

# Stop unattended-upgrades service
sudo systemctl stop unattended-upgrades
sudo systemctl disable unattended-upgrades
sudo pkill -f dpkg
sudo pkill -f apt-get
sudo rm -f /var/lib/dpkg/lock
sudo rm -f /var/lib/apt/lists/lock
sudo rm -f /var/cache/apt/archives/lock
sudo apt get clean

# Install git, make and gcc
sudo apt update -y
sudo killall apt apt-get
sudo apt install -y git make gcc default-jre
sudo killall apt apt-get

# Install docker
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;
sudo apt install -y docker-ce
sudo gpasswd -a jenkins docker
sudo chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
sudo apt install -y openjdk-8-jre
git config --global user.email &quot;katacontainersbot@gmail.com&quot;
git config --global user.name &quot;Kata Containers Bot&quot;

echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo tee -a /etc/hosts

# wipe any partition on sdb and add the device as LVM_DEVICE variable
device=/dev/sdb
echo &quot;LVM_DEVICE=\&quot;$device\&quot;&quot; | sudo tee -a /etc/environment
mount | grep -q $device &amp;&amp; sudo umount $(mount | grep $device | cut -d&apos; &apos; -f1)
sudo dd if=/dev/zero of=$device bs=128M count=1</initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails>java.io.IOException: Agent failed to connect, even though the launcher didn&apos;t report it. See the log output for details.</templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>fedora35cloud</templateName>
          <templateDesc>fedora35</templateDesc>
          <labels>fedora35_azure</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katacidiag</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <uri>https://katastg.blob.core.windows.net/kata/Fedora-Cloud-Base-35-1.2.x86_64.vhd</uri>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM</type>
          </imageReference>
          <builtInImage>Ubuntu 20.04 LTS</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

# Install git, gcc and python
sudo dnf install -y git gcc python make haveged

sudo mount /tmp -o remount,rw,dev

sudo systemctl start haveged

# the following was done already within the vm image
#sudo grubby --update-kernel=ALL --args=&quot;systemd.unified_cgroup_hierarchy=0&quot;
#sudo dnf remove qemu-guest-agent zram-generator-defaults
#sudo dnf install -y git vim make wget openssl driverctl pciutils
# installed waagent: https://github.com/Azure/WALinuxAgent

# Install Java JRE and JDK for Jenkins agent
sudo dnf install -y java-1.8.0-openjdk </initScript>
          <terminateScript></terminateScript>
          <credentialsId>a6317428-9508-4ce9-b123-82742f45ec74</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>false</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>centos8stream</templateName>
          <templateDesc>centos8stream</templateDesc>
          <labels>centos_8_stream</labels>
          <location>East US 2</location>
          <availabilityType/>
          <virtualMachineSize>Standard_D4s_v3</virtualMachineSize>
          <storageAccountNameReferenceType>new</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <ephemeralOSDisk>true</ephemeralOSDisk>
          <osDiskSize>0</osDiskSize>
          <newStorageAccountName>katastg</newStorageAccountName>
          <existingStorageAccountName>katastg</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <osDiskStorageAccountType>Standard_LRS</osDiskStorageAccountType>
          <noOfParallelJobs>1</noOfParallelJobs>
          <usageMode>EXCLUSIVE</usageMode>
          <shutdownOnIdle>false</shutdownOnIdle>
          <imageTopLevelType>advanced</imageTopLevelType>
          <imageReference>
            <uri>https://katastg.blob.core.windows.net/kata/CentOS-Stream-ec2-8-20220125.1.x86_64.vhd</uri>
            <galleryImageSpecialized>false</galleryImageSpecialized>
            <type>CUSTOM</type>
          </imageReference>
          <builtInImage>Ubuntu 20.04 LTS</builtInImage>
          <installGit>false</installGit>
          <installMaven>false</installMaven>
          <installDocker>false</installDocker>
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>false</preInstallSsh>
          <initScript>#!/bin/bash

set -x

# Install git, gcc and python
yum install -y git gcc java

# Install docker
#yum install -y yum-utils
#yum-config-manager --add-repo &quot;https://download.docker.com/linux/centos/docker-ce.repo&quot;
#yum -y install docker-ce

#systemctl start docker
#gpasswd -a jenkins docker
#chmod g+rw /var/run/docker.sock

# Install Java JRE and JDK for Jenkins agent
#yum install -y java-1.8.0-openjdk

echo &quot;jenkins ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers</initScript>
          <terminateScript></terminateScript>
          <credentialsId>kata-openstack-credentials</credentialsId>
          <agentWorkspace>/tmp/jenkins</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName></virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName></subnetName>
          <usePrivateIP>false</usePrivateIP>
          <spotInstance>false</spotInstance>
          <acceleratedNetworking>false</acceleratedNetworking>
          <nsgName></nsgName>
          <jvmOptions></jvmOptions>
          <remotingOptions></remotingOptions>
          <templateDisabled>false</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
          <enableMSI>false</enableMSI>
          <enableUAMI>false</enableUAMI>
          <uamiID></uamiID>
          <javaPath>java</javaPath>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudOnceRetentionStrategy"/>
          <maximumDeploymentSize>0</maximumDeploymentSize>
          <tags/>
          <maxVirtualMachinesLimit>0</maxVirtualMachinesLimit>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
      </vmTemplates>
      <deploymentTimeout>1200</deploymentTimeout>
      <approximateVirtualMachineCount>0</approximateVirtualMachineCount>
      <cloudTags/>
    </com.microsoft.azure.vmagent.AzureVMCloud>
    <hudson.plugins.ec2.EC2Cloud plugin="ec2@1.68">
      <name>ec2-aws-jenkins</name>
      <useInstanceProfileForCredentials>false</useInstanceProfileForCredentials>
      <roleArn></roleArn>
      <roleSessionName></roleSessionName>
      <credentialsId>aws-ec2-jenkins</credentialsId>
      <sshKeysCredentialsId>c3a8010f-d4bb-438b-a1d2-a4aa7316db49</sshKeysCredentialsId>
      <instanceCap>1</instanceCap>
      <templates>
        <hudson.plugins.ec2.SlaveTemplate>
          <ami>ami-06f2f779464715dc5</ami>
          <description>baremetal-ubuntu-aws-us-west-2a</description>
          <zone>us-west-2a</zone>
          <spotConfig>
            <useBidPrice>true</useBidPrice>
            <spotMaxBidPrice>3.3</spotMaxBidPrice>
            <fallbackToOndemand>true</fallbackToOndemand>
            <spotBlockReservationDuration>4</spotBlockReservationDuration>
          </spotConfig>
          <securityGroups>default</securityGroups>
          <remoteFS>/home/ubuntu</remoteFS>
          <type>I3Metal</type>
          <ebsOptimized>false</ebsOptimized>
          <monitoring>false</monitoring>
          <t2Unlimited>false</t2Unlimited>
          <labels>bm-ubuntu-aws-us-west-2a</labels>
          <mode>EXCLUSIVE</mode>
          <initScript>#!/bin/bash

set -x

# Sleep some time to let cloud-init to finish
wait_for_cloud_init_time=10
echo &quot;Sleep $wait_for_cloud_init_time to let cloud-init finish&quot; 
sleep &quot;$wait_for_cloud_init_time&quot;

export DEBIAN_FRONTEND=noninteractive

uname -a
cat /etc/os-release

echo &quot;Install dependencies&quot;
sudo apt-get update 
sudo apt-get install dialog apt-utils -y

sudo apt-get clean -y
sudo apt-get autoremove -y

# Install Java JRE and JDK for Jenkins agent
sudo apt-get install -y openjdk-8-jre

# Install git, make and gcc
sudo apt-get install -y git gcc make

# Install docker
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;
sudo apt-get update -y
sudo apt-get install -y docker-ce
sudo gpasswd -a ubuntu docker
sudo chmod g+rw /var/run/docker.sock

git config --global user.email &quot;katacontainersbot@gmail.com&quot;
git config --global user.name &quot;Kata Containers Bot&quot;</initScript>
          <tmpDir></tmpDir>
          <userData></userData>
          <numExecutors>1</numExecutors>
          <remoteAdmin>ubuntu</remoteAdmin>
          <jvmopts></jvmopts>
          <subnetId>subnet-035683d0cecf5941a</subnetId>
          <idleTerminationMinutes>5</idleTerminationMinutes>
          <iamInstanceProfile></iamInstanceProfile>
          <deleteRootOnTermination>true</deleteRootOnTermination>
          <useEphemeralDevices>false</useEphemeralDevices>
          <customDeviceMapping>/dev/sda1=:100:true:gp2</customDeviceMapping>
          <instanceCap>1</instanceCap>
          <minimumNumberOfInstances>0</minimumNumberOfInstances>
          <minimumNumberOfSpareInstances>0</minimumNumberOfSpareInstances>
          <stopOnTerminate>false</stopOnTerminate>
          <connectionStrategy>PUBLIC_IP</connectionStrategy>
          <hostKeyVerificationStrategy>CHECK_NEW_SOFT</hostKeyVerificationStrategy>
          <associatePublicIp>true</associatePublicIp>
          <amiType class="hudson.plugins.ec2.UnixData">
            <rootCommandPrefix></rootCommandPrefix>
            <slaveCommandPrefix></slaveCommandPrefix>
            <slaveCommandSuffix></slaveCommandSuffix>
            <sshPort>22</sshPort>
          </amiType>
          <launchTimeout>2147483647</launchTimeout>
          <connectBySSHProcess>true</connectBySSHProcess>
          <maxTotalUses>1</maxTotalUses>
          <nodeProperties/>
          <nextSubnet>0</nextSubnet>
          <tenancy>Default</tenancy>
          <ebsEncryptRootVolume>DEFAULT</ebsEncryptRootVolume>
          <metadataEndpointEnabled>true</metadataEndpointEnabled>
          <metadataTokensRequired>false</metadataTokensRequired>
          <metadataHopsLimit>1</metadataHopsLimit>
          <amiOwners></amiOwners>
          <amiUsers></amiUsers>
          <usePrivateDnsName>false</usePrivateDnsName>
          <connectUsingPublicIp>true</connectUsingPublicIp>
        </hudson.plugins.ec2.SlaveTemplate>
        <hudson.plugins.ec2.SlaveTemplate>
          <ami>ami-06f2f779464715dc5</ami>
          <description>baremetal-aws-ubuntu</description>
          <zone></zone>
          <spotConfig>
            <useBidPrice>true</useBidPrice>
            <spotMaxBidPrice>3.3</spotMaxBidPrice>
            <fallbackToOndemand>false</fallbackToOndemand>
            <spotBlockReservationDuration>4</spotBlockReservationDuration>
          </spotConfig>
          <securityGroups></securityGroups>
          <remoteFS>/home/ubuntu</remoteFS>
          <type>I3Metal</type>
          <ebsOptimized>false</ebsOptimized>
          <monitoring>false</monitoring>
          <t2Unlimited>false</t2Unlimited>
          <labels>bm-ubuntu-aws-us-west-2b</labels>
          <mode>EXCLUSIVE</mode>
          <initScript>#!/bin/bash

set -x

# Sleep some time to let cloud-init to finish
wait_for_cloud_init_time=10
echo &quot;Sleep $wait_for_cloud_init_time to let cloud-init finish&quot; 
sleep &quot;$wait_for_cloud_init_time&quot;

export DEBIAN_FRONTEND=noninteractive

uname -a
cat /etc/os-release

echo &quot;Install dependencies&quot;
sudo apt-get update 
sudo apt-get install dialog apt-utils -y

sudo apt-get clean -y
sudo apt-get autoremove -y

# Install Java JRE and JDK for Jenkins agent
sudo apt-get install -y openjdk-8-jre

# Install git, make and gcc
sudo apt-get install -y git gcc make

# Install docker
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;
sudo apt-get update -y
sudo apt-get install -y docker-ce
sudo gpasswd -a ubuntu docker
sudo chmod g+rw /var/run/docker.sock

git config --global user.email &quot;katacontainersbot@gmail.com&quot;
git config --global user.name &quot;Kata Containers Bot&quot;</initScript>
          <tmpDir></tmpDir>
          <userData></userData>
          <numExecutors>1</numExecutors>
          <remoteAdmin>ubuntu</remoteAdmin>
          <jvmopts></jvmopts>
          <subnetId>subnet-035683d0cecf5941a</subnetId>
          <idleTerminationMinutes>5</idleTerminationMinutes>
          <iamInstanceProfile></iamInstanceProfile>
          <deleteRootOnTermination>true</deleteRootOnTermination>
          <useEphemeralDevices>false</useEphemeralDevices>
          <customDeviceMapping>/dev/sda1=:100:true:gp2</customDeviceMapping>
          <instanceCap>5</instanceCap>
          <minimumNumberOfInstances>0</minimumNumberOfInstances>
          <minimumNumberOfSpareInstances>0</minimumNumberOfSpareInstances>
          <stopOnTerminate>false</stopOnTerminate>
          <connectionStrategy>PUBLIC_IP</connectionStrategy>
          <hostKeyVerificationStrategy>CHECK_NEW_SOFT</hostKeyVerificationStrategy>
          <associatePublicIp>true</associatePublicIp>
          <amiType class="hudson.plugins.ec2.UnixData">
            <rootCommandPrefix></rootCommandPrefix>
            <slaveCommandPrefix></slaveCommandPrefix>
            <slaveCommandSuffix></slaveCommandSuffix>
            <sshPort>22</sshPort>
          </amiType>
          <launchTimeout>2147483647</launchTimeout>
          <connectBySSHProcess>true</connectBySSHProcess>
          <maxTotalUses>1</maxTotalUses>
          <nodeProperties/>
          <nextSubnet>0</nextSubnet>
          <tenancy>Default</tenancy>
          <ebsEncryptRootVolume>DEFAULT</ebsEncryptRootVolume>
          <metadataEndpointEnabled>true</metadataEndpointEnabled>
          <metadataTokensRequired>false</metadataTokensRequired>
          <metadataHopsLimit>1</metadataHopsLimit>
          <amiOwners></amiOwners>
          <amiUsers></amiUsers>
          <usePrivateDnsName>false</usePrivateDnsName>
          <connectUsingPublicIp>true</connectUsingPublicIp>
        </hudson.plugins.ec2.SlaveTemplate>
      </templates>
      <region>us-west-2</region>
      <altEC2Endpoint></altEC2Endpoint>
      <noDelayProvisioning>false</noDelayProvisioning>
    </hudson.plugins.ec2.EC2Cloud>
  </clouds>
  <quietPeriod>5</quietPeriod>
  <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
  <views>
    <hudson.model.AllView>
      <owner class="hudson" reference="../../.."/>
      <name>all</name>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
    </hudson.model.AllView>
    <hudson.plugins.sectioned__view.SectionedView plugin="sectioned-view@1.25">
      <owner class="hudson" reference="../../.."/>
      <name>CI Status</name>
      <description>This View shows the status of the CI jobs and tests.</description>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
      <sections>
        <hudson.plugins.sectioned__view.TextSection>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator"/>
          </jobNames>
          <jobFilters/>
          <name>Unstable tests </name>
          <width>HALF</width>
          <alignment>LEFT</alignment>
          <text>- none</text>
          <style>NOTE</style>
        </hudson.plugins.sectioned__view.TextSection>
        <hudson.plugins.sectioned__view.TextSection>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
          </jobNames>
          <jobFilters/>
          <name>Unstable Jobs </name>
          <width>HALF</width>
          <alignment>RIGHT</alignment>
          <text>- S390 Failing - WIP, updates coming.
- SLES - Broken repository - https://github.com/kata-containers/tests/issues/1929
- Firecracker : https://github.com/kata-containers/runtime/issues/1970</text>
          <style>NOTE</style>
        </hudson.plugins.sectioned__view.TextSection>
      </sections>
    </hudson.plugins.sectioned__view.SectionedView>
    <listView>
      <owner class="hudson" reference="../../.."/>
      <name>Kata 2.x</name>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
      <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
        <string>kata-containers-2-clh-PR</string>
        <string>kata-containers-2-crio-PR</string>
        <string>kata-containers-2.0-clh-tdx-x86_64</string>
        <string>kata-containers-2.0-crio-rhel-initrd-s390x-PR</string>
        <string>kata-containers-2.0-firecracker-ubuntu-PR</string>
        <string>kata-containers-2.0-kernel-tdx-x86_64-nightly</string>
        <string>kata-containers-2.0-metrics-ubuntu-20-04-PR</string>
        <string>kata-containers-2.0-pmem-ubuntu-20.04-PR</string>
        <string>kata-containers-2.0-Power9-crio-k8s-ubuntu-20-04-PR</string>
        <string>kata-containers-2.0-ppc64le-containerd-k8s-ubuntu-20-04-PR</string>
        <string>kata-containers-2.0-qat-ubuntu-20.04-PR</string>
        <string>kata-containers-2.0-qemu-s390x</string>
        <string>kata-containers-2.0-qemu-tdx-x86_64</string>
        <string>kata-containers-2.0-tests-firecracker-ubuntu-PR</string>
        <string>kata-containers-2.0-tests-metrics-ubuntu-20-04-PR</string>
        <string>kata-containers-2.0-tests-pmem-ubuntu-20.04-PR</string>
        <string>kata-containers-2.0-tests-ppc64le-containerd-k8s-ubuntu-20-04-PR</string>
        <string>kata-containers-2.0-tests-qat-ubuntu-20.04-PR</string>
        <string>kata-containers-2.0-tests-ubuntu-s390x-PR</string>
        <string>kata-containers-2.0-tests-ubuntu20.04-PR</string>
        <string>kata-containers-2.0-tests-vfio-PR</string>
        <string>kata-containers-2.0-ubuntu-1804-PR-cloud-hypervisor-k8s-containerd-devmapper</string>
        <string>kata-containers-2.0-ubuntu-1804-tests-PR-cloud-hypervisor-k8s-containerd-devmapper</string>
        <string>kata-containers-2.0-ubuntu-20.04-PR</string>
        <string>kata-containers-2.0-ubuntu-20.04-PR-qemu-devmapper</string>
        <string>kata-containers-2.0-ubuntu-20.04-tests-PR-qemu-devmapper</string>
        <string>kata-containers-2.0-ubuntu-PR-x86_64-clh-crio-kata-repo</string>
        <string>kata-containers-2.0-ubuntu-PR-x86_64-clh-crio-tests-repo</string>
        <string>kata-containers-2.0-ubuntu-s390x-PR</string>
        <string>kata-containers-2.0-vfio-PR</string>
        <string>kata-containers-CCv0-fedora-PR</string>
        <string>kata-containers-CCv0-firecracker-ubuntu-PR</string>
        <string>kata-containers-CCv0-tests-fedora-PR</string>
        <string>kata-containers-CCv0-tests-firecracker-ubuntu-PR</string>
        <string>kata-containers-CCv0-tests-ubuntu-20.04-PR</string>
        <string>kata-containers-CCv0-ubuntu-20.04-PR</string>
        <string>kata-containers-centos-AlibabaCloud-PR</string>
        <string>kata-containers-fedora-35-x86_64-CRIO_K8S-PR</string>
        <string>kata-containers-fedora-35-x86_64-CRIO_K8S_MINIMAL-PR</string>
        <string>kata-containers-main-experimental-virtiofs</string>
        <string>kata-containers-main-fedora-35-x86_64-CRIO_K8S-baseline</string>
        <string>kata-containers-tests-centos-AlibabaCloud-PR</string>
        <string>kata-deploy-ubuntu-nightly</string>
        <string>kata-manager-ubuntu-nightly</string>
        <string>tests-fedora-35-x86_64-CRIO_K8S-PR</string>
        <string>tests-fedora-35-x86_64-CRIO_K8S_MINIMAL-PR</string>
        <string>wainer-kata-containers-2.0-ubuntu-20.10-AMD</string>
        <string>wainer-tests-CCv0-fedora-35-x86_64-CC_CRI_CONTAINERD_CLOUD_HYPERVISOR</string>
      </jobNames>
      <jobFilters/>
      <columns>
        <hudson.views.StatusColumn/>
        <hudson.views.WeatherColumn/>
        <hudson.views.JobColumn/>
        <hudson.views.LastSuccessColumn/>
        <hudson.views.LastFailureColumn/>
        <hudson.views.LastDurationColumn/>
        <hudson.views.BuildButtonColumn/>
        <org.jenkins.plugins.builton.BuiltOnColumn plugin="built-on-column@1.1"/>
        <hudson.plugins.favorite.column.FavoriteColumn plugin="favorite@2.4.1"/>
      </columns>
      <includeRegex>kata-containers-2.*</includeRegex>
      <recurse>false</recurse>
    </listView>
    <listView>
      <owner class="hudson" reference="../../.."/>
      <name>CCv0</name>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
      <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
        <string>kata-containers-CCv0-fedora-PR</string>
        <string>kata-containers-CCv0-firecracker-ubuntu-PR</string>
        <string>kata-containers-CCv0-tests-fedora-PR</string>
        <string>kata-containers-CCv0-tests-firecracker-ubuntu-PR</string>
        <string>kata-containers-CCv0-tests-ubuntu-20.04-PR</string>
        <string>kata-containers-CCv0-ubuntu-20.04-PR</string>
        <string>kata-containers-CCv0-ubuntu-20.04-x86_64-CC_CRI_CONTAINERD-PR</string>
        <string>kata-containers-CCv0-ubuntu-20.04-x86_64-CC_CRI_CONTAINERD_CLOUD_HYPERVISOR-PR</string>
        <string>kata-containers-CCv0-ubuntu-20.04-x86_64-CC_CRI_CONTAINERD_K8S-PR</string>
        <string>kata-containers-CCv0-ubuntu-20.04-x86_64-CC_SKOPEO_CRI_CONTAINERD-PR</string>
        <string>kata-containers-CCv0-ubuntu-20.04-x86_64-CC_SKOPEO_CRI_CONTAINERD_CLOUD_HYPERVISOR-PR</string>
        <string>kata-containers-CCv0-ubuntu-20.04-x86_64-CC_SKOPEO_CRI_CONTAINERD_K8S-PR</string>
        <string>tests-CCv0-ubuntu-20.04-x86_64-CC_CRI_CONTAINERD-PR</string>
        <string>tests-CCv0-ubuntu-20.04-x86_64-CC_CRI_CONTAINERD_CLOUD_HYPERVISOR-PR</string>
        <string>tests-CCv0-ubuntu-20.04-x86_64-CC_CRI_CONTAINERD_K8S-PR</string>
        <string>tests-CCv0-ubuntu-20.04-x86_64-CC_SKOPEO_CRI_CONTAINERD-PR</string>
        <string>tests-CCv0-ubuntu-20.04-x86_64-CC_SKOPEO_CRI_CONTAINERD_CLOUD_HYPERVISOR-PR</string>
        <string>tests-CCv0-ubuntu-20.04-x86_64-CC_SKOPEO_CRI_CONTAINERD_K8S-PR</string>
      </jobNames>
      <jobFilters/>
      <columns>
        <hudson.views.StatusColumn/>
        <hudson.views.WeatherColumn/>
        <hudson.views.JobColumn/>
        <hudson.views.LastSuccessColumn/>
        <hudson.views.LastFailureColumn/>
        <hudson.views.LastDurationColumn/>
        <hudson.views.BuildButtonColumn/>
        <org.jenkins.plugins.builton.BuiltOnColumn plugin="built-on-column@1.1"/>
        <hudson.plugins.favorite.column.FavoriteColumn plugin="favorite@2.4.1"/>
      </columns>
      <recurse>false</recurse>
    </listView>
    <hudson.plugins.sectioned__view.SectionedView plugin="sectioned-view@1.25">
      <owner class="hudson" reference="../../.."/>
      <name>JobsByType</name>
      <description>View groups jobs by type&#xd;
&#xd;
&#xd;
 kata-containers-2.0-ubuntu-PR-x86_64-clh-containerd-k8s-minimal-kata-repo&#xd;
  ▲                             ▲          ▲ ▲         ▲                                           ▲&#xd;
  │                 ┌────┘           │   │         │                                            │&#xd;
  │                 │                        │   └─┐    └──┐                                    │&#xd;
  │                 │                        │         │            │                                    │&#xd;
  │                 │             ┌───┘         │            │             ┌────────┘&#xd;
  │                 │             │                    │            │             │&#xd;
  &lt;project&gt;-&lt;distro&gt;-&lt;PR|branch&gt;-&lt;arch&gt;-&lt;job-id&gt;-&lt;repo&gt;-repo&#xd;
</description>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
      <sections>
        <hudson.plugins.sectioned__view.TextSection>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
          </jobNames>
          <jobFilters/>
          <name>Cloud Hypervisor Jobs</name>
          <width>FULL</width>
          <alignment>CENTER</alignment>
          <text>job maintainers @jcvenega @likebreath

</text>
          <style>NONE</style>
        </hudson.plugins.sectioned__view.TextSection>
        <hudson.plugins.sectioned__view.ListViewSection>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
          </jobNames>
          <jobFilters/>
          <name>Cloud Hypervisor Jobs</name>
          <includeRegex>(.*clh.*)|(.*cloud-hypervisor.*)|(.*CLOUD-HYPERVISOR.*)</includeRegex>
          <width>FULL</width>
          <alignment>LEFT</alignment>
          <columns>
            <hudson.views.StatusColumn/>
            <hudson.views.JobColumn/>
            <hudson.views.LastSuccessColumn/>
            <hudson.views.LastFailureColumn/>
            <hudson.views.LastDurationColumn/>
            <jenkins.branch.DescriptionColumn plugin="branch-api@2.1044.v2c007e51b_87f"/>
          </columns>
        </hudson.plugins.sectioned__view.ListViewSection>
        <hudson.plugins.sectioned__view.TextSection>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
          </jobNames>
          <jobFilters/>
          <name>Experimental jobs</name>
          <width>FULL</width>
          <alignment>CENTER</alignment>
          <text></text>
          <style>NONE</style>
        </hudson.plugins.sectioned__view.TextSection>
        <hudson.plugins.sectioned__view.ListViewSection>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
          </jobNames>
          <jobFilters/>
          <name></name>
          <includeRegex>.*experimental.*</includeRegex>
          <width>FULL</width>
          <alignment>LEFT</alignment>
          <columns>
            <hudson.views.StatusColumn/>
            <hudson.views.JobColumn/>
            <hudson.views.LastSuccessColumn/>
            <hudson.views.LastFailureColumn/>
            <hudson.views.LastDurationColumn/>
            <jenkins.branch.DescriptionColumn plugin="branch-api@2.1044.v2c007e51b_87f"/>
          </columns>
        </hudson.plugins.sectioned__view.ListViewSection>
      </sections>
    </hudson.plugins.sectioned__view.SectionedView>
    <listView>
      <owner class="hudson" reference="../../.."/>
      <name>Daily baseline</name>
      <description>&lt;h2&gt;Jobs for the Daily Baseline&lt;/h2&gt;&#xd;
&#xd;
&#xd;
&lt;table style=&quot;border:1px solid black;border-collapse: collapse;&quot;&gt;&#xd;
  &lt;caption&gt;Mapping baseline jobs to owners&lt;/caption&gt;&#xd;
  &lt;tr style=&quot;text-align:center;&quot;&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;Baseline job&lt;/th&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;Owners&lt;/th&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;Equivalent github checker&lt;/th&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;Required (Y/N)&lt;/th&gt;&#xd;
 &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-ARM-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@jongwu, @justin-he&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ARM-ubuntu-18-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-CONTAINERD-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@GabyCT&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-CLOUD-HYPERVISOR-K8S-CONTAINERD-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@amshinde&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ubuntu-1804-cloud-hypervisor-k8s-containerd-2.0&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-CLOUD-HYPERVISOR-K8S-CRIO-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@fidencio&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ubuntu-clh-crio-18-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-18.04-FIRECRACKER-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@ananos&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-firecracker-ubuntu-18-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-METRICS-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@GabyCT, @dborquez&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-metrics-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-PMEM-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@amshinde, @GabyCT&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-pmem-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-QAT-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@amshinde, @GabyCT&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-qat-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-s390x-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@BbolroC, @stevenhorsman, @davidhay1969&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-s390x-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-VFIO-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@amshinde, @dgibson&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-vfio-host:ubuntu18-04-vm:fedora32&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-ppc64le-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@Amulyam24&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ppc64le-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-main-centos-8-stream-x86_64-CRIO_K8S-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@snir911, @c3d&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-centos-8-stream-x86_64-crio_k8s&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;N (**)&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-main-centos-8-stream-x86_64-CRIO_K8S_MINIMAL-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@snir911, @c3d&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-centos-8-stream-x86_64-crio_k8s_minimal&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;N (**)&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt; kata-containers-main-fedora-35-x86_64-CRIO_K8S-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@snir911, @c3d&lt;/td&gt;&#xd;
    &lt;td&gt;(TBD)jenkins-ci-fedora-35-crio&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;kata-containers-main-fedora-35-x86_64-CRIO_K8S_MINIMAL-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@snir911, @c3d&lt;/td&gt;&#xd;
    &lt;td&gt;(TBD)jenkins-ci-fedora-35-crio-k8s-e2e-minimal&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;crio-kata-containers-2.0-fedora-35-main-baseline&lt;/td&gt;&#xd;
    &lt;td&gt;@fgiudici, @littlejawa, @fidencio&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-kata-containers-crio&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;N&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
&lt;/table&gt;&#xd;
&#xd;
&lt;p&gt;** CentOS 8 Stream was set as CentOS 8 reached EOL, preferably will be replaced with RHEL based OS.&lt;/p&gt;</description>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
      <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
        <string>kata-containers-2.0-ubuntu-20.04-CONTAINERD-main-baseline</string>
        <string>kata-containers-2.0-ubuntu-20.04-ppc64le-main-baseline</string>
        <string>kata-containers-2.0-ubuntu-20.04-QAT-main-baseline</string>
        <string>kata-containers-main-fedora-35-x86_64-CRIO_K8S_MINIMAL-baseline</string>
      </jobNames>
      <jobFilters/>
      <columns>
        <hudson.views.StatusColumn/>
        <hudson.views.WeatherColumn/>
        <hudson.views.JobColumn/>
        <hudson.views.LastSuccessColumn/>
        <hudson.views.LastFailureColumn/>
        <hudson.views.LastDurationColumn/>
        <hudson.views.BuildButtonColumn/>
        <org.jenkins.plugins.builton.BuiltOnColumn plugin="built-on-column@1.1"/>
        <hudson.plugins.favorite.column.FavoriteColumn plugin="favorite@2.4.1"/>
      </columns>
      <includeRegex>.*-baseline</includeRegex>
      <recurse>false</recurse>
    </listView>
    <listView>
      <owner class="hudson" reference="../../.."/>
      <name>JJB managed</name>
      <description>List of jobs currently managed by the Jenkins Job Builder (JJB) tool</description>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
      <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
        <string>kata-containers-main-kernel-experimental-x86_64</string>
        <string>kata-containers-main-kernel-vanilla-x86_64</string>
        <string>kata-containers-main-qemu-x86_64</string>
        <string>kata-containers-stable-2.3-qemu-x86_64</string>
      </jobNames>
      <jobFilters/>
      <columns>
        <hudson.views.StatusColumn/>
        <hudson.views.WeatherColumn/>
        <hudson.views.JobColumn/>
        <hudson.views.LastSuccessColumn/>
        <hudson.views.LastFailureColumn/>
        <hudson.views.LastDurationColumn/>
        <hudson.views.BuildButtonColumn/>
        <org.jenkins.plugins.builton.BuiltOnColumn plugin="built-on-column@1.1"/>
        <hudson.plugins.favorite.column.FavoriteColumn plugin="favorite@2.4.1"/>
      </columns>
      <recurse>false</recurse>
    </listView>
    <hudson.plugins.sectioned__view.SectionedView plugin="sectioned-view@1.25">
      <owner class="hudson" reference="../../.."/>
      <name>PR Triggered</name>
      <description>&lt;h2&gt;List of jobs triggered on pull request&lt;/h2&gt;&#xd;
&#xd;
&lt;table style=&quot;border:1px solid black;border-collapse: collapse;&quot;&gt;&#xd;
  &lt;caption&gt;Mapping baseline to PR jobs&lt;/caption&gt;&#xd;
  &lt;tr style=&quot;text-align:center;&quot;&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;Baseline job&lt;/th&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;kata-containers repo job&lt;/th&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;tests repo job&lt;/th&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;Equivalent github checker&lt;/th&gt;&#xd;
   &lt;th style=&quot;border:1px solid black;border-collapse: collapse;background-color:#C0C0C0;&quot;&gt;Required (Y/N)&lt;/th&gt;&#xd;
 &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-ARM-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-ARM-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-ARM-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-ubuntu-ARM-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ARM-ubuntu-18-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-CONTAINERD-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-CONTAINERD-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-20.04-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-ubuntu20.04-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-CLOUD-HYPERVISOR-K8S-CONTAINERD-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-CLOUD-HYPERVISOR-K8S-CONTAINERD-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-1804-PR-cloud-hypervisor-k8s-containerd&lt;/td&gt;&#xd;
    &lt;td&gt;NO JOB&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ubuntu-1804-cloud-hypervisor-k8s-containerd-2.0&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-CLOUD-HYPERVISOR-K8S-CRIO-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-CLOUD-HYPERVISOR-K8S-CRIO-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-PR-x86_64-clh-crio-kata-repo&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-PR-x86_64-clh-crio-tests-repo&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-ubuntu-clh-crio-18-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-18.04-FIRECRACKER-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-18.04-FIRECRACKER-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-firecracker-ubuntu-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-firecracker-ubuntu-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-firecracker-ubuntu-18-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-METRICS-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-METRICS-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-metrics-ubuntu-20-04-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-metrics-ubuntu-20-04-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-metrics-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-PMEM-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-PMEM-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-pmem-ubuntu-20.04-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-pmem-ubuntu-20.04-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-pmem-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-QAT-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-QAT-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-qat-ubuntu-20.04-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-qat-ubuntu-20.04-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-qat-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-s390x-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-s390x-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-ubuntu-s390x-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-ubuntu-s390x-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-s390x-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-VFIO-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-VFIO-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-vfio-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-vfio-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-vfio-host:ubuntu18-04-vm:fedora32&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-ubuntu-20.04-ppc64le-main-baseline&quot;&gt;kata-containers-2.0-ubuntu-20.04-ppc64le-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;TBD&lt;/td&gt;&#xd;
    &lt;td&gt;NO JOB&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-Power9-ubuntu-20-04&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;N&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-2.0-centos-8-CRIO_K8S-main-baseline&quot;&gt;kata-containers-2.0-centos-8-CRIO_K8S-main-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-centos-PR&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-2.0-tests-centos-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-centos-8&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;N&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-main-fedora-35-x86_64-CRIO_K8S-baseline&quot;&gt;kata-containers-main-fedora-35-x86_64-CRIO_K8S-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-fedora-35-x86_64-CRIO_K8S-PR&lt;/td&gt;&#xd;
    &lt;td&gt;tests-fedora-35-x86_64-CRIO_K8S-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-fedora-35-x86_64-crio_k8s&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
  &lt;tr&gt;&#xd;
    &lt;td&gt;&lt;a href=&quot;http://jenkins.katacontainers.io/job/kata-containers-main-fedora-35-x86_64-CRIO_K8S_MINIMAL-baseline&quot;&gt;kata-containers-main-fedora-35-x86_64-CRIO_K8S_MINIMAL-baseline&lt;/a&gt;&lt;/td&gt;&#xd;
    &lt;td&gt;kata-containers-fedora-35-x86_64-CRIO_K8S_MINIMAL-PR&lt;/td&gt;&#xd;
    &lt;td&gt;tests-fedora-35-x86_64-CRIO_K8S_MINIMAL-PR&lt;/td&gt;&#xd;
    &lt;td&gt;jenkins-ci-fedora-35-x86_64-crio_minimal_k8s&lt;/td&gt;&#xd;
    &lt;td style=&quot;text-align:center;&quot;&gt;Y&lt;/td&gt;&#xd;
  &lt;/tr&gt;&#xd;
&#xd;
&lt;/table&gt;</description>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
      <sections>
        <hudson.plugins.sectioned__view.ViewListingSection>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
          </jobNames>
          <jobFilters/>
          <name>Baseline Jobs</name>
          <width>FULL</width>
          <alignment>CENTER</alignment>
          <views>
            <string>Daily baseline</string>
          </views>
          <columns>1</columns>
        </hudson.plugins.sectioned__view.ViewListingSection>
        <hudson.plugins.sectioned__view.ListViewSection>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../../../hudson.plugins.sectioned__view.SectionedView/sections/hudson.plugins.sectioned__view.TextSection/jobNames/comparator"/>
            <string>jobs-2.0/kata-containers-2.0-ubuntu-1804-PR-cloud-hypervisor-k8s-containerd</string>
            <string>kata-containers-2.0-firecracker-ubuntu-PR</string>
            <string>kata-containers-2.0-metrics-ubuntu-20-04-PR</string>
            <string>kata-containers-2.0-pmem-ubuntu-20.04-PR</string>
            <string>kata-containers-2.0-qat-ubuntu-20.04-PR</string>
            <string>kata-containers-2.0-tests-firecracker-ubuntu-PR</string>
            <string>kata-containers-2.0-tests-metrics-ubuntu-20-04-PR</string>
            <string>kata-containers-2.0-tests-pmem-ubuntu-20.04-PR</string>
            <string>kata-containers-2.0-tests-qat-ubuntu-20.04-PR</string>
            <string>kata-containers-2.0-tests-ubuntu-ARM-PR</string>
            <string>kata-containers-2.0-tests-ubuntu-s390x-PR</string>
            <string>kata-containers-2.0-tests-ubuntu20.04-PR</string>
            <string>kata-containers-2.0-tests-vfio-PR</string>
            <string>kata-containers-2.0-ubuntu-20.04-PR</string>
            <string>kata-containers-2.0-ubuntu-ARM-PR</string>
            <string>kata-containers-2.0-ubuntu-PR-x86_64-clh-crio-kata-repo</string>
            <string>kata-containers-2.0-ubuntu-PR-x86_64-clh-crio-tests-repo</string>
            <string>kata-containers-2.0-ubuntu-s390x-PR</string>
            <string>kata-containers-2.0-vfio-PR</string>
            <string>kata-containers-fedora-35-x86_64-CRIO_K8S-PR</string>
            <string>kata-containers-fedora-35-x86_64-CRIO_K8S_MINIMAL-PR</string>
            <string>tests-fedora-35-x86_64-CRIO_K8S-PR</string>
            <string>tests-fedora-35-x86_64-CRIO_K8S_MINIMAL-PR</string>
          </jobNames>
          <jobFilters/>
          <name>Triggered on pull request jobs</name>
          <width>FULL</width>
          <alignment>CENTER</alignment>
          <columns>
            <hudson.views.StatusColumn/>
            <hudson.views.WeatherColumn/>
            <hudson.views.JobColumn/>
            <hudson.views.LastSuccessColumn/>
            <hudson.views.LastFailureColumn/>
            <hudson.views.LastDurationColumn/>
            <hudson.views.BuildButtonColumn/>
          </columns>
        </hudson.plugins.sectioned__view.ListViewSection>
      </sections>
    </hudson.plugins.sectioned__view.SectionedView>
  </views>
  <primaryView>Kata 2.x</primaryView>
  <slaveAgentPort>-1</slaveAgentPort>
  <label>master</label>
  <crumbIssuer class="hudson.security.csrf.DefaultCrumbIssuer">
    <excludeClientIPFromCrumb>true</excludeClientIPFromCrumb>
  </crumbIssuer>
  <nodeProperties/>
  <globalNodeProperties/>
  <nodeRenameMigrationNeeded>false</nodeRenameMigrationNeeded>
</hudson>